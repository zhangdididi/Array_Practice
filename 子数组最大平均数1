/*
给定 n 个整数，找出平均数最大且长度为 k 的连续子数组，并输出该最大平均数。

示例 1:

输入: [1,12,-5,-6,50,3], k = 4
输出: 12.75
解释: 最大平均数 (12-5-6+50)/4 = 51/4 = 12.75
 

注意:

1 <= k <= n <= 30,000。
所给数据范围 [-10,000，10,000]。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/maximum-average-subarray-i
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
*/

class Solution {
    public double findMaxAverage(int[] nums, int k) {
        int left = 0;
        int right = k - 1;
        double max = -10000;
        while (right < nums.length) {
            double sum = 0;
            for (int i = left; i <= right; i++) {
                sum += nums[i];
            }
            //循环结束,sum存储了第一个长度为k的连续子序列的和
            //然后对sum 和 max 进行比较 大的留下
            if (sum / k > max) {
                max = sum / k;
            }
            //更新子数组的区间[left, right]
            left++;
            right++;
        }
        return max;
    }
}
