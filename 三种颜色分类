给定一个包含红色、白色和蓝色，一共 n 个元素的数组，原地对它们进行排序，使得相同颜色的元素相邻，并按照红色、白色、蓝色顺序排列。

此题中，我们使用整数 0、 1 和 2 分别表示红色、白色和蓝色。

注意:
不能使用代码库中的排序函数来解决这道题。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/sort-colors

//创建哈希表
class Solution {
    public void sortColors(int[] nums) {
        int[] table = new int[3];
        for (int elem : nums) {
            table[elem]++;
        }
        int color = 0;
        int index = 0;
        while (color < 3) {
            if (table[color] < 1) {
                ++color;
            } else {
                nums[index++] = color;
                table[color]--;
            }
        }
    }
}

//空间复杂度O(1) 创建三个指针
class Solution {
    public void sortColors(int[] nums) {
        if (nums.length < 2) return;
        int color0 = 0;
        int color2 = nums.length - 1;
        int cur = 0;
        while (cur <= color2) {
            if (nums[cur] == 0) {
                swap(nums, cur, color0);
                cur++;
                color0++;
            } else if (nums[cur] == 2) {
                swap(nums, cur, color2);
                color2--;
            } else {
                cur++;
            }
        }

    }

    //用按位与的方式交换两个数值
    public void swap(int[] array, int index1, int index2) {
        int temp = array[index1];
        array[index1] = array[index2];
        array[index2] = temp;
    }
}
