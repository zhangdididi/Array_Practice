/*
给定一个长度为 n 的整数数组，你的任务是判断在最多改变 1 个元素的情况下，该数组能否变成一个非递减数列。

我们是这样定义一个非递减数列的： 对于数组中所有的 i (1 <= i < n)，满足 array[i] <= array[i + 1]。

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/non-decreasing-array
*/

class Solution {
    public boolean checkPossibility(int[] nums) {
        if (nums.length < 3) {
            return true;
        }
        int count = 0;
        if (nums[0] > nums[1]) {
            nums[0] = nums[1];
            count++;
        }
        for (int i = 1; i < nums.length - 1; i++) {
            int right = nums[i + 1];
            if (right < nums[i]) {
                count++;
                if (count > 1) {
                    return false;
                }
                int left = nums[i - 1];
                if (left > right) {
                    nums[i + 1] = nums[i];
                } else {
                    nums[i] = left;
                }
            }
        }// end for
        return true;
    }
}
