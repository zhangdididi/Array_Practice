/*
输入n个整数，找出其中最小的K个数。
例如输入4,5,1,6,2,7,3,8这8个数字，则最小的4个数字是1,2,3,4,。
*/

//优先级队列
import java.util.PriorityQueue;
import java.util.ArrayList;
import java.util.Comparator;
public class Solution {
    public ArrayList<Integer> GetLeastNumbers_Solution(int [] input, int k) {
        ArrayList<Integer> list = new ArrayList<>();
        int length = input.length;
        if (k == 0 || k > length) {
            return list;
        }
        PriorityQueue<Integer> heap = new PriorityQueue<>(k, new Comparator<Integer>() {
            public int compare(Integer o1, Integer o2) {
                return o2.compareTo(o1);
            }
        });
        
        for (int i = 0; i < length; i++) {
            if (heap.size() < k) {
                heap.add(input[i]);
            } else if (heap.peek() > input[i]) {
                heap.poll();
                heap.offer(input[i]);
            }
        }
        for (Integer num : heap) {
            list.add(num);
        }
        return list;
    }
}
