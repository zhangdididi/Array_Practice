//遍历两次
class Solution {
    public int dominantIndex(int[] nums) {
        if (nums.length == 0) {
            return -1;
        }
        int max = 0;
        int count = 0;
        for (int i = 0; i < nums.length; i++) {
            if (max < nums[i]) {
                max = nums[i];
                count = i;
            }
        }
        for (int j = 0; j < nums.length; j++) {
            if (max < 2 * nums[j] && max != nums[j]) {
                return -1;
            }
        }
        return count;
    }
}


//一次遍历
class Solution {
    public int dominantIndex(int[] nums) {
        if (nums.length == 0) {
            return -1;
        }
        int max1 = -1;
        int max2 = -1;
        int count = -1;
        for (int i = 0; i < nums.length; i++) {
            if (max1 < nums[i]) {
                max2 = max1;
                max1 = nums[i];
                count = i;
            } else if (nums[i] > max2) {
                max2 = nums[i];
            }
        }
        if (max1 >= 2 * max2) {
            return count;
        } else {
            return -1;
        }
    }
}
