/*
一个整型数组里除了两个数字之外，其他的数字都出现了两次。
请写程序找出这两个只出现一次的数字。
*/

//哈希表
public class Solution {
    public void FindNumsAppearOnce(int [] array,int num1[] , int num2[]) {
        Map<Integer, Integer> map = new HashMap<>();
        for (int num : array) {
            int count = map.getOrDefault(num, 0);
            map.put(num, count + 1);
        }
        int curr = 0;
        while (curr < array.length) {
            if (map.get(array[curr]) == 1) {
                num1[0] = array[curr];
                curr++;
                break;
            }
            curr++;
        }
        while (curr < array.length) {
            if (map.get(array[curr]) == 1) {
                num2[0] = array[curr];
                return;
            }
            curr++;
        }
    }
}


//排序
public void FindNumsAppearOnce(int [] array,int num1[] , int num2[]) {
    List<Integer> list = new ArrayList<>();
    Arrays.sort(array);
    for (int i = 0; i < array.length; i++) {
        if (i + 1 < array.length && array[i] == array[i + 1]) {
            i++;
        } else {
            list.add(array[i]);
        }
    }
    num1[0] = list.get(0);
    num2[0] = list.get(1);
}


//出现次数两次的进一次出一次
public class Solution {
    public void FindNumsAppearOnce(int [] array,int num1[] , int num2[]) {
        List<Integer> list = new ArrayList<>();
        for (int i = 0; i < array.length; i++) {
            if (!list.contains(array[i])) {
                list.add(array[i]);
            } else {
                list.remove(new Integer(array[i]));
            }
        }
        num1[0] = list.get(0);
        num2[0] = list.get(1);
    }
}
