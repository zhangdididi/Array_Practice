/*
判断一个整数是否是回文数。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。
*/

//反转一半数字
public boolean isPalindrome(int x) {
    if (x < 0 || (x % 10 == 0 && x != 0)) return false;
    int reverseNum = 0;
    while (x > reverseNum) {
        reverseNum = reverseNum * 10 + (x % 10);
        x /= 10;
    }
    //偶数一半相等或者奇数减少一个位数之后相等，就返回true
    return x == reverseNum || x == reverseNum / 10;
}



//数组列表
public boolean isPalindrome(int x) {
    if (x < 0) return false;
    List<Integer> list = new ArrayList<>();
    int num = x;
    while (num > 0) {
        //依次保留数字的每一位
        list.add(num % 10);
        num /= 10;
    }
    for (int i = 0; i < list.size() / 2; i++) {
        if (list.get(i) != list.get(list.size() - i - 1)) {
            return false;
        }
    }
    return true;
}

