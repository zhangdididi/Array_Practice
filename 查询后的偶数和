public  int[] sumEvenAfterQueries2(int[] A, int[][] queries) {
        int[] answer = new int[A.length];
        int even = 0;
        //遍历A数组，求出A数组的偶数之和
        for (int i = 0; i < A.length; i++) {
            if (A[i] % 2 == 0) {
                even += A[i];
            }
        }
        for (int j = 0; j < A.length; j++) {
            int val = queries[j][0];
            int index = queries[j][1];
            A[index] += val;

            if (A[index] % 2 == 0) {
                if (val % 2 == 0) {
                    even += val;
                } else {
                    even += A[index];
                }
            } else {
                if (val % 2 != 0) {
                    even -= (A[index] - val);
                }
            }
            answer[j] = even;
        }
        return answer;
}
        
        
public static int[] sumEvenAfterQueries(int[] A, int[][] queries) {
        int[] answer = new int[A.length];
        int count = 0;
        int val = 0;
        int index = 0;
        for (int i = 0; i < A.length; i++) {
            val = queries[i][0];
            index = queries[i][1];
            count = 0;
            A[index] += val;
            for (int j = 0; j < A.length; j++) {
                if (A[j] % 2 == 0) {
                    count += A[j];
                }
            }
            answer[i] = count;
        }
        return answer;
}        
        
