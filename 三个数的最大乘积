class Solution {
    public int maximumProduct(int[] nums) {
        //如果数组长度为3，就直接返回三个元素的乘积
        if (nums.length == 3) {
            return nums[0] * nums[1] * nums[2];
        }
        int p1 = 0, p2 = 0, p3 = 0;
        int n1 = 0, n2 = 0;
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] >= 0) {
                //如果大于等于0,就更新每一个数，等于后一个数
                if (p3 < nums[i]) {
                    p1 = p2;
                    p2 = p3;
                    p3 = nums[i];
                } else if (p2 < nums[i]) {
                    p1 = p2;
                    p2 = nums[i];
                } else if (p1 < nums[i]) {
                    p1 = nums[i];
                }
            } else {
                //如果小于零
                if (n1 > nums[i]) {
                    n1 = nums[i];
                }
                if (n2 > nums[i]) {
                    n1 = n2;
                    n2 = nums[i];
                }
            }
        }
        if (p1 * p2 * p3 > n1 * n2 * p3) {
            return p1 * p2 * p3;
        } else {
            return n1 * n2 * p3;
        }
    }
}
